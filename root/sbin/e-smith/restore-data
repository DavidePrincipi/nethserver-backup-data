#! /usr/bin/perl -w
#
# Copyright (C) 2013 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;
use esmith::ConfigDB;
use NethServer::BackupConfig;

my $conf = esmith::ConfigDB->open || die("Could not open config db\n");
my $backup = $conf->get('backup-data');
my $program = $backup->prop('Program') || 'duplicity';
my $status;

$backup = new NethServer::BackupConfig();
$backup->set_log_file("/var/log/restore-data.log");

$backup->logger("START","Restore data started");

if ($status = system(qw(/sbin/e-smith/signal-event pre-restore-data)))
{
    $backup->bad_exit("Event pre-restore-data failed", $status);
}
$backup->logger("STEP","pre-restore-data done");

if ($status = system("/etc/e-smith/events/actions/restore-data-$program"))
{
    $backup->bad_exit("Action restore-data-$program failed", $status);
}
$backup->logger("STEP","restore-data-$program done");

if ($status = system(qw(/sbin/e-smith/signal-event post-restore-data)))
{
    $backup->bad_exit("Event post-restore-data failed", $status);
}

$backup->logger("SUCCESS","Restore data done");

exit 0;
